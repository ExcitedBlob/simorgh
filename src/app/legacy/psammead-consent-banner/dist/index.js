"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConsentBanner = exports.ConsentBannerText = void 0;

var _base = _interopRequireDefault(require("@emotion/styled/base"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = require("prop-types");

var _propTypes2 = require("@bbc/gel-foundations/prop-types");

var _colours = require("@bbc/psammead-styles/colours");

var _typography = require("@bbc/gel-foundations/typography");

var _breakpoints = require("@bbc/gel-foundations/breakpoints");

var _spacings = require("@bbc/gel-foundations/spacings");

var _fontStyles = require("@bbc/psammead-styles/font-styles");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Transparent border is to show the top of the wrapper and button border in high-contrast mode
var transparentBorderHeight = '0.0625rem';
var hoverFocusStyles = "\n  &:focus,\n  &:hover {\n    color: ".concat(_colours.C_EBON, ";\n    background-color: ").concat(_colours.C_CONSENT_ACTION, ";\n  }\n");
var Wrapper = (0, _base.default)("div", process.env.NODE_ENV === "production" ? {
  target: "e1o5up6o5"
} : {
  target: "e1o5up6o5",
  label: "Wrapper"
})(function (_ref) {
  var service = _ref.service;
  return (0, _fontStyles.getSansRegular)(service);
}, " background-color:", _colours.C_CONSENT_BACKGROUND, ";border-top:solid ", transparentBorderHeight, " transparent;@media (max-width: ", _breakpoints.GEL_GROUP_1_SCREEN_WIDTH_MAX, "){padding:calc(", _spacings.GEL_SPACING_DBL, " - ", transparentBorderHeight, ") ", _spacings.GEL_SPACING, " ", _spacings.GEL_SPACING, " ", _spacings.GEL_SPACING, ";}@media (min-width: ", _breakpoints.GEL_GROUP_2_SCREEN_WIDTH_MIN, ") and (max-width: ", _breakpoints.GEL_GROUP_2_SCREEN_WIDTH_MAX, "){padding:calc(", _spacings.GEL_SPACING_DBL, " - ", transparentBorderHeight, ") ", _spacings.GEL_SPACING_DBL, " ", _spacings.GEL_SPACING, " ", _spacings.GEL_SPACING_DBL, ";}@media (min-width: ", _breakpoints.GEL_GROUP_3_SCREEN_WIDTH_MIN, "){padding:calc(", _spacings.GEL_SPACING_QUAD, " - ", transparentBorderHeight, ") ", _spacings.GEL_SPACING_DBL, " ", _spacings.GEL_SPACING_QUAD, " ", _spacings.GEL_SPACING_DBL, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0QwQiIsImZpbGUiOiIuLi9zcmMvaW5kZXguanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBzdHJpbmcsXG4gIGVsZW1lbnQsXG4gIGJvb2wsXG4gIG9uZU9mLFxuICBzaGFwZSxcbiAgZnVuYyxcbiAgb25lT2ZUeXBlLFxuICBhbnksXG59IGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgc2NyaXB0UHJvcFR5cGUgfSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9wcm9wLXR5cGVzJztcbmltcG9ydCB7XG4gIENfQ09OU0VOVF9CQUNLR1JPVU5ELFxuICBDX0NPTlNFTlRfQUNUSU9OLFxuICBDX0NPTlNFTlRfQ09OVEVOVCxcbiAgQ19XSElURSxcbiAgQ19QRUJCTEUsXG4gIENfRUJPTixcbiAgQ19HSE9TVCxcbn0gZnJvbSAnQGJiYy9wc2FtbWVhZC1zdHlsZXMvY29sb3Vycyc7XG5pbXBvcnQge1xuICBnZXREb3VibGVQaWNhLFxuICBnZXRMb25nUHJpbWVyLFxuICBnZXRCb2R5Q29weSxcbn0gZnJvbSAnQGJiYy9nZWwtZm91bmRhdGlvbnMvdHlwb2dyYXBoeSc7XG5pbXBvcnQge1xuICBHRUxfR1JPVVBfMV9TQ1JFRU5fV0lEVEhfTUFYLFxuICBHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUlOLFxuICBHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUFYLFxuICBHRUxfR1JPVVBfM19TQ1JFRU5fV0lEVEhfTUlOLFxufSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9icmVha3BvaW50cyc7XG5pbXBvcnQge1xuICBHRUxfU1BBQ0lORyxcbiAgR0VMX1NQQUNJTkdfREJMLFxuICBHRUxfU1BBQ0lOR19UUlBMLFxuICBHRUxfU1BBQ0lOR19RVUFELFxufSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9zcGFjaW5ncyc7XG5pbXBvcnQgeyBnZXRTYW5zUmVndWxhciB9IGZyb20gJ0BiYmMvcHNhbW1lYWQtc3R5bGVzL2ZvbnQtc3R5bGVzJztcblxuLy8gVHJhbnNwYXJlbnQgYm9yZGVyIGlzIHRvIHNob3cgdGhlIHRvcCBvZiB0aGUgd3JhcHBlciBhbmQgYnV0dG9uIGJvcmRlciBpbiBoaWdoLWNvbnRyYXN0IG1vZGVcbmNvbnN0IHRyYW5zcGFyZW50Qm9yZGVySGVpZ2h0ID0gJzAuMDYyNXJlbSc7XG5cbmNvbnN0IGhvdmVyRm9jdXNTdHlsZXMgPSBgXG4gICY6Zm9jdXMsXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiAke0NfRUJPTn07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtDX0NPTlNFTlRfQUNUSU9OfTtcbiAgfVxuYDtcblxuY29uc3QgV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gICR7KHsgc2VydmljZSB9KSA9PiBnZXRTYW5zUmVndWxhcihzZXJ2aWNlKX1cbiAgYmFja2dyb3VuZC1jb2xvcjogJHtDX0NPTlNFTlRfQkFDS0dST1VORH07XG4gIGJvcmRlci10b3A6IHNvbGlkICR7dHJhbnNwYXJlbnRCb3JkZXJIZWlnaHR9IHRyYW5zcGFyZW50O1xuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke0dFTF9HUk9VUF8xX1NDUkVFTl9XSURUSF9NQVh9KSB7XG4gICAgcGFkZGluZzogY2FsYygke0dFTF9TUEFDSU5HX0RCTH0gLSAke3RyYW5zcGFyZW50Qm9yZGVySGVpZ2h0fSlcbiAgICAgICR7R0VMX1NQQUNJTkd9ICR7R0VMX1NQQUNJTkd9ICR7R0VMX1NQQUNJTkd9O1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8yX1NDUkVFTl9XSURUSF9NSU59KSBhbmQgKG1heC13aWR0aDogJHtHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUFYfSkge1xuICAgIHBhZGRpbmc6IGNhbGMoJHtHRUxfU1BBQ0lOR19EQkx9IC0gJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0pXG4gICAgICAke0dFTF9TUEFDSU5HX0RCTH0gJHtHRUxfU1BBQ0lOR30gJHtHRUxfU1BBQ0lOR19EQkx9O1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgcGFkZGluZzogY2FsYygke0dFTF9TUEFDSU5HX1FVQUR9IC0gJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0pXG4gICAgICAke0dFTF9TUEFDSU5HX0RCTH0gJHtHRUxfU1BBQ0lOR19RVUFEfSAke0dFTF9TUEFDSU5HX0RCTH07XG4gIH1cbmA7XG5cbmNvbnN0IENlbnRlcldyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXgtd2lkdGg6ICR7R0VMX0dST1VQXzJfU0NSRUVOX1dJRFRIX01BWH07XG4gIG1hcmdpbjogMCBhdXRvO1xuXG4gIGEge1xuICAgIGNvbG9yOiAke0NfQ09OU0VOVF9BQ1RJT059O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAwLjA2MjVyZW0gJHtDX1BFQkJMRX07XG5cbiAgICAke2hvdmVyRm9jdXNTdHlsZXN9XG4gIH1cblxuICBhOmhvdmVyLFxuICBhOmZvY3VzIHtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAwLjEyNXJlbSB0cmFuc3BhcmVudDtcbiAgfVxuYDtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3Byb3AtdHlwZXNcbmNvbnN0IEZvY3VzYWJsZUgyID0gZm9yd2FyZFJlZigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCBkaXIgfSwgcmVmKSA9PiB7XG4gIC8vIHRhYkluZGV4PVwiLTFcIiBlbmFibGVzIHRoZSBoMiB0byBiZSBmb2N1c3NlZFxuICByZXR1cm4gKFxuICAgIDxoMiBjbGFzc05hbWU9e2NsYXNzTmFtZX0gZGlyPXtkaXJ9IHRhYkluZGV4PVwiLTFcIiByZWY9e3JlZn0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9oMj5cbiAgKTtcbn0pO1xuXG5jb25zdCBUaXRsZSA9IHN0eWxlZChGb2N1c2FibGVIMilgXG4gICR7KHsgc2NyaXB0IH0pID0+IHNjcmlwdCAmJiBnZXREb3VibGVQaWNhKHNjcmlwdCl9O1xuICBjb2xvcjogJHtDX1dISVRFfTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cbmA7XG5cbi8qXG4gKiBUaGUgJyYgbGkgKyBsaScgYmVsb3cgYWxsb3dzIGZvciBzdHlsaW5nIGV2ZXJ5IGBsaWAgZWxlbWVudCBleGNlcHQgdGhlIGZpcnN0LlxuICovXG5jb25zdCBPcHRpb25zID0gc3R5bGVkLnVsYFxuICAkeyh7IHNjcmlwdCB9KSA9PiBzY3JpcHQgJiYgZ2V0TG9uZ1ByaW1lcihzY3JpcHQpfTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICR7Q19DT05TRU5UX0FDVElPTn07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuXG4gICYgbGkgKyBsaSB7XG4gICAgbWFyZ2luLXRvcDogJHtHRUxfU1BBQ0lOR307XG4gICAgcGFkZGluZy10b3A6ICR7R0VMX1NQQUNJTkdfREJMfTtcbiAgICBwYWRkaW5nLWJvdHRvbTogJHtHRUxfU1BBQ0lOR19EQkx9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuXG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cbiAgICAmIGxpICsgbGkge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG4gIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb25zZW50QmFubmVyVGV4dCA9IHN0eWxlZC5wYFxuICAkeyh7IHNjcmlwdCB9KSA9PiBzY3JpcHQgJiYgZ2V0Qm9keUNvcHkoc2NyaXB0KX07XG4gIG1hcmdpbi10b3A6ICR7R0VMX1NQQUNJTkdfREJMfTtcbiAgbWFyZ2luLWJvdHRvbTogJHtHRUxfU1BBQ0lOR19UUlBMfTtcbiAgY29sb3I6ICR7Q19DT05TRU5UX0NPTlRFTlR9O1xuXG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgbWFyZ2luLXRvcDogJHtHRUxfU1BBQ0lOR19UUlBMfTtcbiAgfVxuYDtcblxuLy8gU3R5bGUgYGJ1dHRvbmAgYW5kIGBhYCBhcyBjaGlsZHJlbiBkdWUgdG8gaW5hYmlsaXR5IHRvIHNldCBgb25gXG4vLyBwcm9wIG9uIHN0eWxlZCBjb21wb25lbnQgYXMgcmVxdWlyZWQgZm9yIHRoZSBhbXAgdXNlYWdlXG5jb25zdCBMaXN0SXRlbSA9IHN0eWxlZC5saWBcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgJiBidXR0b24ge1xuICAgICR7KHsgc2NyaXB0IH0pID0+IHNjcmlwdCAmJiBnZXRMb25nUHJpbWVyKHNjcmlwdCl9O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDIuNzVyZW07XG4gICAgY29sb3I6ICR7Q19FQk9OfTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke0NfR0hPU1R9O1xuICAgIGJvcmRlcjogc29saWQgJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0gdHJhbnNwYXJlbnQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICY6aG92ZXIsXG4gICAgJjpmb2N1cyB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG5cbiAgICAke2hvdmVyRm9jdXNTdHlsZXN9XG4gIH1cblxuICBAbWVkaWEgKG1pbi13aWR0aDogJHtHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUlOfSkge1xuICAgIHdpZHRoOiAxNy4zMTI1cmVtO1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29uc2VudEJhbm5lciA9ICh7XG4gIGRpcixcbiAgdGl0bGUsXG4gIHRleHQsXG4gIGFjY2VwdCxcbiAgcmVqZWN0LFxuICBpZCxcbiAgaGlkZGVuLFxuICBzY3JpcHQsXG4gIHNlcnZpY2UsXG4gIGhlYWRpbmdSZWYsXG59KSA9PiAoXG4gIDxXcmFwcGVyIGRpcj17ZGlyfSBoaWRkZW49e2hpZGRlbn0gaWQ9e2lkfSBzZXJ2aWNlPXtzZXJ2aWNlfT5cbiAgICA8Q2VudGVyV3JhcHBlciBkaXI9e2Rpcn0+XG4gICAgICA8VGl0bGUgZGlyPXtkaXJ9IHNjcmlwdD17c2NyaXB0fSByZWY9e2hlYWRpbmdSZWZ9PlxuICAgICAgICB7dGl0bGV9XG4gICAgICA8L1RpdGxlPlxuICAgICAge3RleHR9XG4gICAgICA8T3B0aW9ucyBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9IHJvbGU9XCJsaXN0XCI+XG4gICAgICAgIDxMaXN0SXRlbSBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9PlxuICAgICAgICAgIHthY2NlcHR9XG4gICAgICAgIDwvTGlzdEl0ZW0+XG4gICAgICAgIDxMaXN0SXRlbSBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9PlxuICAgICAgICAgIDxzcGFuPntyZWplY3R9PC9zcGFuPlxuICAgICAgICA8L0xpc3RJdGVtPlxuICAgICAgPC9PcHRpb25zPlxuICAgIDwvQ2VudGVyV3JhcHBlcj5cbiAgPC9XcmFwcGVyPlxuKTtcblxuQ29uc2VudEJhbm5lci5wcm9wVHlwZXMgPSB7XG4gIGRpcjogb25lT2YoWydsdHInLCAncnRsJ10pLFxuICB0aXRsZTogc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRleHQ6IGVsZW1lbnQuaXNSZXF1aXJlZCxcbiAgYWNjZXB0OiBlbGVtZW50LmlzUmVxdWlyZWQsXG4gIHJlamVjdDogZWxlbWVudC5pc1JlcXVpcmVkLFxuICBpZDogc3RyaW5nLFxuICBoaWRkZW46IGJvb2wsXG4gIHNjcmlwdDogc2hhcGUoc2NyaXB0UHJvcFR5cGUpLmlzUmVxdWlyZWQsXG4gIHNlcnZpY2U6IHN0cmluZy5pc1JlcXVpcmVkLFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvZm9yYmlkLXByb3AtdHlwZXNcbiAgaGVhZGluZ1JlZjogb25lT2ZUeXBlKFtmdW5jLCBzaGFwZSh7IGN1cnJlbnQ6IGFueSB9KV0pLFxufTtcblxuQ29uc2VudEJhbm5lci5kZWZhdWx0UHJvcHMgPSB7XG4gIGRpcjogJ2x0cicsXG4gIGlkOiBudWxsLFxuICBoaWRkZW46IG51bGwsXG4gIGhlYWRpbmdSZWY6IG51bGwsXG59O1xuIl19 */"));
var CenterWrapper = (0, _base.default)("div", process.env.NODE_ENV === "production" ? {
  target: "e1o5up6o4"
} : {
  target: "e1o5up6o4",
  label: "CenterWrapper"
})("max-width:", _breakpoints.GEL_GROUP_2_SCREEN_WIDTH_MAX, ";margin:0 auto;a{color:", _colours.C_CONSENT_ACTION, ";text-decoration:none;border-bottom:solid 0.0625rem ", _colours.C_PEBBLE, ";", hoverFocusStyles, ";}a:hover,a:focus{border-bottom:solid 0.125rem transparent;}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUVnQyIsImZpbGUiOiIuLi9zcmMvaW5kZXguanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBzdHJpbmcsXG4gIGVsZW1lbnQsXG4gIGJvb2wsXG4gIG9uZU9mLFxuICBzaGFwZSxcbiAgZnVuYyxcbiAgb25lT2ZUeXBlLFxuICBhbnksXG59IGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgc2NyaXB0UHJvcFR5cGUgfSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9wcm9wLXR5cGVzJztcbmltcG9ydCB7XG4gIENfQ09OU0VOVF9CQUNLR1JPVU5ELFxuICBDX0NPTlNFTlRfQUNUSU9OLFxuICBDX0NPTlNFTlRfQ09OVEVOVCxcbiAgQ19XSElURSxcbiAgQ19QRUJCTEUsXG4gIENfRUJPTixcbiAgQ19HSE9TVCxcbn0gZnJvbSAnQGJiYy9wc2FtbWVhZC1zdHlsZXMvY29sb3Vycyc7XG5pbXBvcnQge1xuICBnZXREb3VibGVQaWNhLFxuICBnZXRMb25nUHJpbWVyLFxuICBnZXRCb2R5Q29weSxcbn0gZnJvbSAnQGJiYy9nZWwtZm91bmRhdGlvbnMvdHlwb2dyYXBoeSc7XG5pbXBvcnQge1xuICBHRUxfR1JPVVBfMV9TQ1JFRU5fV0lEVEhfTUFYLFxuICBHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUlOLFxuICBHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUFYLFxuICBHRUxfR1JPVVBfM19TQ1JFRU5fV0lEVEhfTUlOLFxufSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9icmVha3BvaW50cyc7XG5pbXBvcnQge1xuICBHRUxfU1BBQ0lORyxcbiAgR0VMX1NQQUNJTkdfREJMLFxuICBHRUxfU1BBQ0lOR19UUlBMLFxuICBHRUxfU1BBQ0lOR19RVUFELFxufSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9zcGFjaW5ncyc7XG5pbXBvcnQgeyBnZXRTYW5zUmVndWxhciB9IGZyb20gJ0BiYmMvcHNhbW1lYWQtc3R5bGVzL2ZvbnQtc3R5bGVzJztcblxuLy8gVHJhbnNwYXJlbnQgYm9yZGVyIGlzIHRvIHNob3cgdGhlIHRvcCBvZiB0aGUgd3JhcHBlciBhbmQgYnV0dG9uIGJvcmRlciBpbiBoaWdoLWNvbnRyYXN0IG1vZGVcbmNvbnN0IHRyYW5zcGFyZW50Qm9yZGVySGVpZ2h0ID0gJzAuMDYyNXJlbSc7XG5cbmNvbnN0IGhvdmVyRm9jdXNTdHlsZXMgPSBgXG4gICY6Zm9jdXMsXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiAke0NfRUJPTn07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtDX0NPTlNFTlRfQUNUSU9OfTtcbiAgfVxuYDtcblxuY29uc3QgV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gICR7KHsgc2VydmljZSB9KSA9PiBnZXRTYW5zUmVndWxhcihzZXJ2aWNlKX1cbiAgYmFja2dyb3VuZC1jb2xvcjogJHtDX0NPTlNFTlRfQkFDS0dST1VORH07XG4gIGJvcmRlci10b3A6IHNvbGlkICR7dHJhbnNwYXJlbnRCb3JkZXJIZWlnaHR9IHRyYW5zcGFyZW50O1xuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke0dFTF9HUk9VUF8xX1NDUkVFTl9XSURUSF9NQVh9KSB7XG4gICAgcGFkZGluZzogY2FsYygke0dFTF9TUEFDSU5HX0RCTH0gLSAke3RyYW5zcGFyZW50Qm9yZGVySGVpZ2h0fSlcbiAgICAgICR7R0VMX1NQQUNJTkd9ICR7R0VMX1NQQUNJTkd9ICR7R0VMX1NQQUNJTkd9O1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8yX1NDUkVFTl9XSURUSF9NSU59KSBhbmQgKG1heC13aWR0aDogJHtHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUFYfSkge1xuICAgIHBhZGRpbmc6IGNhbGMoJHtHRUxfU1BBQ0lOR19EQkx9IC0gJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0pXG4gICAgICAke0dFTF9TUEFDSU5HX0RCTH0gJHtHRUxfU1BBQ0lOR30gJHtHRUxfU1BBQ0lOR19EQkx9O1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgcGFkZGluZzogY2FsYygke0dFTF9TUEFDSU5HX1FVQUR9IC0gJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0pXG4gICAgICAke0dFTF9TUEFDSU5HX0RCTH0gJHtHRUxfU1BBQ0lOR19RVUFEfSAke0dFTF9TUEFDSU5HX0RCTH07XG4gIH1cbmA7XG5cbmNvbnN0IENlbnRlcldyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXgtd2lkdGg6ICR7R0VMX0dST1VQXzJfU0NSRUVOX1dJRFRIX01BWH07XG4gIG1hcmdpbjogMCBhdXRvO1xuXG4gIGEge1xuICAgIGNvbG9yOiAke0NfQ09OU0VOVF9BQ1RJT059O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAwLjA2MjVyZW0gJHtDX1BFQkJMRX07XG5cbiAgICAke2hvdmVyRm9jdXNTdHlsZXN9XG4gIH1cblxuICBhOmhvdmVyLFxuICBhOmZvY3VzIHtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAwLjEyNXJlbSB0cmFuc3BhcmVudDtcbiAgfVxuYDtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3Byb3AtdHlwZXNcbmNvbnN0IEZvY3VzYWJsZUgyID0gZm9yd2FyZFJlZigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCBkaXIgfSwgcmVmKSA9PiB7XG4gIC8vIHRhYkluZGV4PVwiLTFcIiBlbmFibGVzIHRoZSBoMiB0byBiZSBmb2N1c3NlZFxuICByZXR1cm4gKFxuICAgIDxoMiBjbGFzc05hbWU9e2NsYXNzTmFtZX0gZGlyPXtkaXJ9IHRhYkluZGV4PVwiLTFcIiByZWY9e3JlZn0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9oMj5cbiAgKTtcbn0pO1xuXG5jb25zdCBUaXRsZSA9IHN0eWxlZChGb2N1c2FibGVIMilgXG4gICR7KHsgc2NyaXB0IH0pID0+IHNjcmlwdCAmJiBnZXREb3VibGVQaWNhKHNjcmlwdCl9O1xuICBjb2xvcjogJHtDX1dISVRFfTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cbmA7XG5cbi8qXG4gKiBUaGUgJyYgbGkgKyBsaScgYmVsb3cgYWxsb3dzIGZvciBzdHlsaW5nIGV2ZXJ5IGBsaWAgZWxlbWVudCBleGNlcHQgdGhlIGZpcnN0LlxuICovXG5jb25zdCBPcHRpb25zID0gc3R5bGVkLnVsYFxuICAkeyh7IHNjcmlwdCB9KSA9PiBzY3JpcHQgJiYgZ2V0TG9uZ1ByaW1lcihzY3JpcHQpfTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICR7Q19DT05TRU5UX0FDVElPTn07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuXG4gICYgbGkgKyBsaSB7XG4gICAgbWFyZ2luLXRvcDogJHtHRUxfU1BBQ0lOR307XG4gICAgcGFkZGluZy10b3A6ICR7R0VMX1NQQUNJTkdfREJMfTtcbiAgICBwYWRkaW5nLWJvdHRvbTogJHtHRUxfU1BBQ0lOR19EQkx9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuXG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cbiAgICAmIGxpICsgbGkge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG4gIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb25zZW50QmFubmVyVGV4dCA9IHN0eWxlZC5wYFxuICAkeyh7IHNjcmlwdCB9KSA9PiBzY3JpcHQgJiYgZ2V0Qm9keUNvcHkoc2NyaXB0KX07XG4gIG1hcmdpbi10b3A6ICR7R0VMX1NQQUNJTkdfREJMfTtcbiAgbWFyZ2luLWJvdHRvbTogJHtHRUxfU1BBQ0lOR19UUlBMfTtcbiAgY29sb3I6ICR7Q19DT05TRU5UX0NPTlRFTlR9O1xuXG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgbWFyZ2luLXRvcDogJHtHRUxfU1BBQ0lOR19UUlBMfTtcbiAgfVxuYDtcblxuLy8gU3R5bGUgYGJ1dHRvbmAgYW5kIGBhYCBhcyBjaGlsZHJlbiBkdWUgdG8gaW5hYmlsaXR5IHRvIHNldCBgb25gXG4vLyBwcm9wIG9uIHN0eWxlZCBjb21wb25lbnQgYXMgcmVxdWlyZWQgZm9yIHRoZSBhbXAgdXNlYWdlXG5jb25zdCBMaXN0SXRlbSA9IHN0eWxlZC5saWBcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgJiBidXR0b24ge1xuICAgICR7KHsgc2NyaXB0IH0pID0+IHNjcmlwdCAmJiBnZXRMb25nUHJpbWVyKHNjcmlwdCl9O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDIuNzVyZW07XG4gICAgY29sb3I6ICR7Q19FQk9OfTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke0NfR0hPU1R9O1xuICAgIGJvcmRlcjogc29saWQgJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0gdHJhbnNwYXJlbnQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICY6aG92ZXIsXG4gICAgJjpmb2N1cyB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG5cbiAgICAke2hvdmVyRm9jdXNTdHlsZXN9XG4gIH1cblxuICBAbWVkaWEgKG1pbi13aWR0aDogJHtHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUlOfSkge1xuICAgIHdpZHRoOiAxNy4zMTI1cmVtO1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29uc2VudEJhbm5lciA9ICh7XG4gIGRpcixcbiAgdGl0bGUsXG4gIHRleHQsXG4gIGFjY2VwdCxcbiAgcmVqZWN0LFxuICBpZCxcbiAgaGlkZGVuLFxuICBzY3JpcHQsXG4gIHNlcnZpY2UsXG4gIGhlYWRpbmdSZWYsXG59KSA9PiAoXG4gIDxXcmFwcGVyIGRpcj17ZGlyfSBoaWRkZW49e2hpZGRlbn0gaWQ9e2lkfSBzZXJ2aWNlPXtzZXJ2aWNlfT5cbiAgICA8Q2VudGVyV3JhcHBlciBkaXI9e2Rpcn0+XG4gICAgICA8VGl0bGUgZGlyPXtkaXJ9IHNjcmlwdD17c2NyaXB0fSByZWY9e2hlYWRpbmdSZWZ9PlxuICAgICAgICB7dGl0bGV9XG4gICAgICA8L1RpdGxlPlxuICAgICAge3RleHR9XG4gICAgICA8T3B0aW9ucyBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9IHJvbGU9XCJsaXN0XCI+XG4gICAgICAgIDxMaXN0SXRlbSBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9PlxuICAgICAgICAgIHthY2NlcHR9XG4gICAgICAgIDwvTGlzdEl0ZW0+XG4gICAgICAgIDxMaXN0SXRlbSBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9PlxuICAgICAgICAgIDxzcGFuPntyZWplY3R9PC9zcGFuPlxuICAgICAgICA8L0xpc3RJdGVtPlxuICAgICAgPC9PcHRpb25zPlxuICAgIDwvQ2VudGVyV3JhcHBlcj5cbiAgPC9XcmFwcGVyPlxuKTtcblxuQ29uc2VudEJhbm5lci5wcm9wVHlwZXMgPSB7XG4gIGRpcjogb25lT2YoWydsdHInLCAncnRsJ10pLFxuICB0aXRsZTogc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRleHQ6IGVsZW1lbnQuaXNSZXF1aXJlZCxcbiAgYWNjZXB0OiBlbGVtZW50LmlzUmVxdWlyZWQsXG4gIHJlamVjdDogZWxlbWVudC5pc1JlcXVpcmVkLFxuICBpZDogc3RyaW5nLFxuICBoaWRkZW46IGJvb2wsXG4gIHNjcmlwdDogc2hhcGUoc2NyaXB0UHJvcFR5cGUpLmlzUmVxdWlyZWQsXG4gIHNlcnZpY2U6IHN0cmluZy5pc1JlcXVpcmVkLFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvZm9yYmlkLXByb3AtdHlwZXNcbiAgaGVhZGluZ1JlZjogb25lT2ZUeXBlKFtmdW5jLCBzaGFwZSh7IGN1cnJlbnQ6IGFueSB9KV0pLFxufTtcblxuQ29uc2VudEJhbm5lci5kZWZhdWx0UHJvcHMgPSB7XG4gIGRpcjogJ2x0cicsXG4gIGlkOiBudWxsLFxuICBoaWRkZW46IG51bGwsXG4gIGhlYWRpbmdSZWY6IG51bGwsXG59O1xuIl19 */")); // eslint-disable-next-line react/prop-types

var FocusableH2 = /*#__PURE__*/(0, _react.forwardRef)(function (_ref2, ref) {
  var className = _ref2.className,
      children = _ref2.children,
      dir = _ref2.dir;
  // tabIndex="-1" enables the h2 to be focussed
  return /*#__PURE__*/_react.default.createElement("h2", {
    className: className,
    dir: dir,
    tabIndex: "-1",
    ref: ref
  }, children);
});
var Title = ( /*#__PURE__*/0, _base.default)(FocusableH2, process.env.NODE_ENV === "production" ? {
  target: "e1o5up6o3"
} : {
  target: "e1o5up6o3",
  label: "Title"
})(function (_ref3) {
  var script = _ref3.script;
  return script && (0, _typography.getDoublePica)(script);
}, ";color:", _colours.C_WHITE, ";font-weight:700;padding:0;margin:0;&:focus{outline:none;}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUdpQyIsImZpbGUiOiIuLi9zcmMvaW5kZXguanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBzdHJpbmcsXG4gIGVsZW1lbnQsXG4gIGJvb2wsXG4gIG9uZU9mLFxuICBzaGFwZSxcbiAgZnVuYyxcbiAgb25lT2ZUeXBlLFxuICBhbnksXG59IGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgc2NyaXB0UHJvcFR5cGUgfSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9wcm9wLXR5cGVzJztcbmltcG9ydCB7XG4gIENfQ09OU0VOVF9CQUNLR1JPVU5ELFxuICBDX0NPTlNFTlRfQUNUSU9OLFxuICBDX0NPTlNFTlRfQ09OVEVOVCxcbiAgQ19XSElURSxcbiAgQ19QRUJCTEUsXG4gIENfRUJPTixcbiAgQ19HSE9TVCxcbn0gZnJvbSAnQGJiYy9wc2FtbWVhZC1zdHlsZXMvY29sb3Vycyc7XG5pbXBvcnQge1xuICBnZXREb3VibGVQaWNhLFxuICBnZXRMb25nUHJpbWVyLFxuICBnZXRCb2R5Q29weSxcbn0gZnJvbSAnQGJiYy9nZWwtZm91bmRhdGlvbnMvdHlwb2dyYXBoeSc7XG5pbXBvcnQge1xuICBHRUxfR1JPVVBfMV9TQ1JFRU5fV0lEVEhfTUFYLFxuICBHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUlOLFxuICBHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUFYLFxuICBHRUxfR1JPVVBfM19TQ1JFRU5fV0lEVEhfTUlOLFxufSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9icmVha3BvaW50cyc7XG5pbXBvcnQge1xuICBHRUxfU1BBQ0lORyxcbiAgR0VMX1NQQUNJTkdfREJMLFxuICBHRUxfU1BBQ0lOR19UUlBMLFxuICBHRUxfU1BBQ0lOR19RVUFELFxufSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9zcGFjaW5ncyc7XG5pbXBvcnQgeyBnZXRTYW5zUmVndWxhciB9IGZyb20gJ0BiYmMvcHNhbW1lYWQtc3R5bGVzL2ZvbnQtc3R5bGVzJztcblxuLy8gVHJhbnNwYXJlbnQgYm9yZGVyIGlzIHRvIHNob3cgdGhlIHRvcCBvZiB0aGUgd3JhcHBlciBhbmQgYnV0dG9uIGJvcmRlciBpbiBoaWdoLWNvbnRyYXN0IG1vZGVcbmNvbnN0IHRyYW5zcGFyZW50Qm9yZGVySGVpZ2h0ID0gJzAuMDYyNXJlbSc7XG5cbmNvbnN0IGhvdmVyRm9jdXNTdHlsZXMgPSBgXG4gICY6Zm9jdXMsXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiAke0NfRUJPTn07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtDX0NPTlNFTlRfQUNUSU9OfTtcbiAgfVxuYDtcblxuY29uc3QgV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gICR7KHsgc2VydmljZSB9KSA9PiBnZXRTYW5zUmVndWxhcihzZXJ2aWNlKX1cbiAgYmFja2dyb3VuZC1jb2xvcjogJHtDX0NPTlNFTlRfQkFDS0dST1VORH07XG4gIGJvcmRlci10b3A6IHNvbGlkICR7dHJhbnNwYXJlbnRCb3JkZXJIZWlnaHR9IHRyYW5zcGFyZW50O1xuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke0dFTF9HUk9VUF8xX1NDUkVFTl9XSURUSF9NQVh9KSB7XG4gICAgcGFkZGluZzogY2FsYygke0dFTF9TUEFDSU5HX0RCTH0gLSAke3RyYW5zcGFyZW50Qm9yZGVySGVpZ2h0fSlcbiAgICAgICR7R0VMX1NQQUNJTkd9ICR7R0VMX1NQQUNJTkd9ICR7R0VMX1NQQUNJTkd9O1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8yX1NDUkVFTl9XSURUSF9NSU59KSBhbmQgKG1heC13aWR0aDogJHtHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUFYfSkge1xuICAgIHBhZGRpbmc6IGNhbGMoJHtHRUxfU1BBQ0lOR19EQkx9IC0gJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0pXG4gICAgICAke0dFTF9TUEFDSU5HX0RCTH0gJHtHRUxfU1BBQ0lOR30gJHtHRUxfU1BBQ0lOR19EQkx9O1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgcGFkZGluZzogY2FsYygke0dFTF9TUEFDSU5HX1FVQUR9IC0gJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0pXG4gICAgICAke0dFTF9TUEFDSU5HX0RCTH0gJHtHRUxfU1BBQ0lOR19RVUFEfSAke0dFTF9TUEFDSU5HX0RCTH07XG4gIH1cbmA7XG5cbmNvbnN0IENlbnRlcldyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXgtd2lkdGg6ICR7R0VMX0dST1VQXzJfU0NSRUVOX1dJRFRIX01BWH07XG4gIG1hcmdpbjogMCBhdXRvO1xuXG4gIGEge1xuICAgIGNvbG9yOiAke0NfQ09OU0VOVF9BQ1RJT059O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAwLjA2MjVyZW0gJHtDX1BFQkJMRX07XG5cbiAgICAke2hvdmVyRm9jdXNTdHlsZXN9XG4gIH1cblxuICBhOmhvdmVyLFxuICBhOmZvY3VzIHtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAwLjEyNXJlbSB0cmFuc3BhcmVudDtcbiAgfVxuYDtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3Byb3AtdHlwZXNcbmNvbnN0IEZvY3VzYWJsZUgyID0gZm9yd2FyZFJlZigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCBkaXIgfSwgcmVmKSA9PiB7XG4gIC8vIHRhYkluZGV4PVwiLTFcIiBlbmFibGVzIHRoZSBoMiB0byBiZSBmb2N1c3NlZFxuICByZXR1cm4gKFxuICAgIDxoMiBjbGFzc05hbWU9e2NsYXNzTmFtZX0gZGlyPXtkaXJ9IHRhYkluZGV4PVwiLTFcIiByZWY9e3JlZn0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9oMj5cbiAgKTtcbn0pO1xuXG5jb25zdCBUaXRsZSA9IHN0eWxlZChGb2N1c2FibGVIMilgXG4gICR7KHsgc2NyaXB0IH0pID0+IHNjcmlwdCAmJiBnZXREb3VibGVQaWNhKHNjcmlwdCl9O1xuICBjb2xvcjogJHtDX1dISVRFfTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cbmA7XG5cbi8qXG4gKiBUaGUgJyYgbGkgKyBsaScgYmVsb3cgYWxsb3dzIGZvciBzdHlsaW5nIGV2ZXJ5IGBsaWAgZWxlbWVudCBleGNlcHQgdGhlIGZpcnN0LlxuICovXG5jb25zdCBPcHRpb25zID0gc3R5bGVkLnVsYFxuICAkeyh7IHNjcmlwdCB9KSA9PiBzY3JpcHQgJiYgZ2V0TG9uZ1ByaW1lcihzY3JpcHQpfTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICR7Q19DT05TRU5UX0FDVElPTn07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuXG4gICYgbGkgKyBsaSB7XG4gICAgbWFyZ2luLXRvcDogJHtHRUxfU1BBQ0lOR307XG4gICAgcGFkZGluZy10b3A6ICR7R0VMX1NQQUNJTkdfREJMfTtcbiAgICBwYWRkaW5nLWJvdHRvbTogJHtHRUxfU1BBQ0lOR19EQkx9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuXG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cbiAgICAmIGxpICsgbGkge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG4gIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb25zZW50QmFubmVyVGV4dCA9IHN0eWxlZC5wYFxuICAkeyh7IHNjcmlwdCB9KSA9PiBzY3JpcHQgJiYgZ2V0Qm9keUNvcHkoc2NyaXB0KX07XG4gIG1hcmdpbi10b3A6ICR7R0VMX1NQQUNJTkdfREJMfTtcbiAgbWFyZ2luLWJvdHRvbTogJHtHRUxfU1BBQ0lOR19UUlBMfTtcbiAgY29sb3I6ICR7Q19DT05TRU5UX0NPTlRFTlR9O1xuXG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgbWFyZ2luLXRvcDogJHtHRUxfU1BBQ0lOR19UUlBMfTtcbiAgfVxuYDtcblxuLy8gU3R5bGUgYGJ1dHRvbmAgYW5kIGBhYCBhcyBjaGlsZHJlbiBkdWUgdG8gaW5hYmlsaXR5IHRvIHNldCBgb25gXG4vLyBwcm9wIG9uIHN0eWxlZCBjb21wb25lbnQgYXMgcmVxdWlyZWQgZm9yIHRoZSBhbXAgdXNlYWdlXG5jb25zdCBMaXN0SXRlbSA9IHN0eWxlZC5saWBcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgJiBidXR0b24ge1xuICAgICR7KHsgc2NyaXB0IH0pID0+IHNjcmlwdCAmJiBnZXRMb25nUHJpbWVyKHNjcmlwdCl9O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDIuNzVyZW07XG4gICAgY29sb3I6ICR7Q19FQk9OfTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke0NfR0hPU1R9O1xuICAgIGJvcmRlcjogc29saWQgJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0gdHJhbnNwYXJlbnQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICY6aG92ZXIsXG4gICAgJjpmb2N1cyB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG5cbiAgICAke2hvdmVyRm9jdXNTdHlsZXN9XG4gIH1cblxuICBAbWVkaWEgKG1pbi13aWR0aDogJHtHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUlOfSkge1xuICAgIHdpZHRoOiAxNy4zMTI1cmVtO1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29uc2VudEJhbm5lciA9ICh7XG4gIGRpcixcbiAgdGl0bGUsXG4gIHRleHQsXG4gIGFjY2VwdCxcbiAgcmVqZWN0LFxuICBpZCxcbiAgaGlkZGVuLFxuICBzY3JpcHQsXG4gIHNlcnZpY2UsXG4gIGhlYWRpbmdSZWYsXG59KSA9PiAoXG4gIDxXcmFwcGVyIGRpcj17ZGlyfSBoaWRkZW49e2hpZGRlbn0gaWQ9e2lkfSBzZXJ2aWNlPXtzZXJ2aWNlfT5cbiAgICA8Q2VudGVyV3JhcHBlciBkaXI9e2Rpcn0+XG4gICAgICA8VGl0bGUgZGlyPXtkaXJ9IHNjcmlwdD17c2NyaXB0fSByZWY9e2hlYWRpbmdSZWZ9PlxuICAgICAgICB7dGl0bGV9XG4gICAgICA8L1RpdGxlPlxuICAgICAge3RleHR9XG4gICAgICA8T3B0aW9ucyBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9IHJvbGU9XCJsaXN0XCI+XG4gICAgICAgIDxMaXN0SXRlbSBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9PlxuICAgICAgICAgIHthY2NlcHR9XG4gICAgICAgIDwvTGlzdEl0ZW0+XG4gICAgICAgIDxMaXN0SXRlbSBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9PlxuICAgICAgICAgIDxzcGFuPntyZWplY3R9PC9zcGFuPlxuICAgICAgICA8L0xpc3RJdGVtPlxuICAgICAgPC9PcHRpb25zPlxuICAgIDwvQ2VudGVyV3JhcHBlcj5cbiAgPC9XcmFwcGVyPlxuKTtcblxuQ29uc2VudEJhbm5lci5wcm9wVHlwZXMgPSB7XG4gIGRpcjogb25lT2YoWydsdHInLCAncnRsJ10pLFxuICB0aXRsZTogc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRleHQ6IGVsZW1lbnQuaXNSZXF1aXJlZCxcbiAgYWNjZXB0OiBlbGVtZW50LmlzUmVxdWlyZWQsXG4gIHJlamVjdDogZWxlbWVudC5pc1JlcXVpcmVkLFxuICBpZDogc3RyaW5nLFxuICBoaWRkZW46IGJvb2wsXG4gIHNjcmlwdDogc2hhcGUoc2NyaXB0UHJvcFR5cGUpLmlzUmVxdWlyZWQsXG4gIHNlcnZpY2U6IHN0cmluZy5pc1JlcXVpcmVkLFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvZm9yYmlkLXByb3AtdHlwZXNcbiAgaGVhZGluZ1JlZjogb25lT2ZUeXBlKFtmdW5jLCBzaGFwZSh7IGN1cnJlbnQ6IGFueSB9KV0pLFxufTtcblxuQ29uc2VudEJhbm5lci5kZWZhdWx0UHJvcHMgPSB7XG4gIGRpcjogJ2x0cicsXG4gIGlkOiBudWxsLFxuICBoaWRkZW46IG51bGwsXG4gIGhlYWRpbmdSZWY6IG51bGwsXG59O1xuIl19 */"));
/*
 * The '& li + li' below allows for styling every `li` element except the first.
 */

var Options = (0, _base.default)("ul", process.env.NODE_ENV === "production" ? {
  target: "e1o5up6o2"
} : {
  target: "e1o5up6o2",
  label: "Options"
})(function (_ref4) {
  var script = _ref4.script;
  return script && (0, _typography.getLongPrimer)(script);
}, ";display:flex;flex-direction:column;align-items:center;color:", _colours.C_CONSENT_ACTION, ";font-weight:600;padding:0;margin:0;list-style-type:none;& li+li{margin-top:", _spacings.GEL_SPACING, ";padding-top:", _spacings.GEL_SPACING_DBL, ";padding-bottom:", _spacings.GEL_SPACING_DBL, ";display:flex;align-items:center;justify-content:center;}@media (min-width: ", _breakpoints.GEL_GROUP_3_SCREEN_WIDTH_MIN, "){flex-direction:row;justify-content:space-between;& li+li{margin-top:0;}}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0h5QiIsImZpbGUiOiIuLi9zcmMvaW5kZXguanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBzdHJpbmcsXG4gIGVsZW1lbnQsXG4gIGJvb2wsXG4gIG9uZU9mLFxuICBzaGFwZSxcbiAgZnVuYyxcbiAgb25lT2ZUeXBlLFxuICBhbnksXG59IGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgc2NyaXB0UHJvcFR5cGUgfSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9wcm9wLXR5cGVzJztcbmltcG9ydCB7XG4gIENfQ09OU0VOVF9CQUNLR1JPVU5ELFxuICBDX0NPTlNFTlRfQUNUSU9OLFxuICBDX0NPTlNFTlRfQ09OVEVOVCxcbiAgQ19XSElURSxcbiAgQ19QRUJCTEUsXG4gIENfRUJPTixcbiAgQ19HSE9TVCxcbn0gZnJvbSAnQGJiYy9wc2FtbWVhZC1zdHlsZXMvY29sb3Vycyc7XG5pbXBvcnQge1xuICBnZXREb3VibGVQaWNhLFxuICBnZXRMb25nUHJpbWVyLFxuICBnZXRCb2R5Q29weSxcbn0gZnJvbSAnQGJiYy9nZWwtZm91bmRhdGlvbnMvdHlwb2dyYXBoeSc7XG5pbXBvcnQge1xuICBHRUxfR1JPVVBfMV9TQ1JFRU5fV0lEVEhfTUFYLFxuICBHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUlOLFxuICBHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUFYLFxuICBHRUxfR1JPVVBfM19TQ1JFRU5fV0lEVEhfTUlOLFxufSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9icmVha3BvaW50cyc7XG5pbXBvcnQge1xuICBHRUxfU1BBQ0lORyxcbiAgR0VMX1NQQUNJTkdfREJMLFxuICBHRUxfU1BBQ0lOR19UUlBMLFxuICBHRUxfU1BBQ0lOR19RVUFELFxufSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9zcGFjaW5ncyc7XG5pbXBvcnQgeyBnZXRTYW5zUmVndWxhciB9IGZyb20gJ0BiYmMvcHNhbW1lYWQtc3R5bGVzL2ZvbnQtc3R5bGVzJztcblxuLy8gVHJhbnNwYXJlbnQgYm9yZGVyIGlzIHRvIHNob3cgdGhlIHRvcCBvZiB0aGUgd3JhcHBlciBhbmQgYnV0dG9uIGJvcmRlciBpbiBoaWdoLWNvbnRyYXN0IG1vZGVcbmNvbnN0IHRyYW5zcGFyZW50Qm9yZGVySGVpZ2h0ID0gJzAuMDYyNXJlbSc7XG5cbmNvbnN0IGhvdmVyRm9jdXNTdHlsZXMgPSBgXG4gICY6Zm9jdXMsXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiAke0NfRUJPTn07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtDX0NPTlNFTlRfQUNUSU9OfTtcbiAgfVxuYDtcblxuY29uc3QgV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gICR7KHsgc2VydmljZSB9KSA9PiBnZXRTYW5zUmVndWxhcihzZXJ2aWNlKX1cbiAgYmFja2dyb3VuZC1jb2xvcjogJHtDX0NPTlNFTlRfQkFDS0dST1VORH07XG4gIGJvcmRlci10b3A6IHNvbGlkICR7dHJhbnNwYXJlbnRCb3JkZXJIZWlnaHR9IHRyYW5zcGFyZW50O1xuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke0dFTF9HUk9VUF8xX1NDUkVFTl9XSURUSF9NQVh9KSB7XG4gICAgcGFkZGluZzogY2FsYygke0dFTF9TUEFDSU5HX0RCTH0gLSAke3RyYW5zcGFyZW50Qm9yZGVySGVpZ2h0fSlcbiAgICAgICR7R0VMX1NQQUNJTkd9ICR7R0VMX1NQQUNJTkd9ICR7R0VMX1NQQUNJTkd9O1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8yX1NDUkVFTl9XSURUSF9NSU59KSBhbmQgKG1heC13aWR0aDogJHtHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUFYfSkge1xuICAgIHBhZGRpbmc6IGNhbGMoJHtHRUxfU1BBQ0lOR19EQkx9IC0gJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0pXG4gICAgICAke0dFTF9TUEFDSU5HX0RCTH0gJHtHRUxfU1BBQ0lOR30gJHtHRUxfU1BBQ0lOR19EQkx9O1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgcGFkZGluZzogY2FsYygke0dFTF9TUEFDSU5HX1FVQUR9IC0gJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0pXG4gICAgICAke0dFTF9TUEFDSU5HX0RCTH0gJHtHRUxfU1BBQ0lOR19RVUFEfSAke0dFTF9TUEFDSU5HX0RCTH07XG4gIH1cbmA7XG5cbmNvbnN0IENlbnRlcldyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXgtd2lkdGg6ICR7R0VMX0dST1VQXzJfU0NSRUVOX1dJRFRIX01BWH07XG4gIG1hcmdpbjogMCBhdXRvO1xuXG4gIGEge1xuICAgIGNvbG9yOiAke0NfQ09OU0VOVF9BQ1RJT059O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAwLjA2MjVyZW0gJHtDX1BFQkJMRX07XG5cbiAgICAke2hvdmVyRm9jdXNTdHlsZXN9XG4gIH1cblxuICBhOmhvdmVyLFxuICBhOmZvY3VzIHtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAwLjEyNXJlbSB0cmFuc3BhcmVudDtcbiAgfVxuYDtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3Byb3AtdHlwZXNcbmNvbnN0IEZvY3VzYWJsZUgyID0gZm9yd2FyZFJlZigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCBkaXIgfSwgcmVmKSA9PiB7XG4gIC8vIHRhYkluZGV4PVwiLTFcIiBlbmFibGVzIHRoZSBoMiB0byBiZSBmb2N1c3NlZFxuICByZXR1cm4gKFxuICAgIDxoMiBjbGFzc05hbWU9e2NsYXNzTmFtZX0gZGlyPXtkaXJ9IHRhYkluZGV4PVwiLTFcIiByZWY9e3JlZn0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9oMj5cbiAgKTtcbn0pO1xuXG5jb25zdCBUaXRsZSA9IHN0eWxlZChGb2N1c2FibGVIMilgXG4gICR7KHsgc2NyaXB0IH0pID0+IHNjcmlwdCAmJiBnZXREb3VibGVQaWNhKHNjcmlwdCl9O1xuICBjb2xvcjogJHtDX1dISVRFfTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cbmA7XG5cbi8qXG4gKiBUaGUgJyYgbGkgKyBsaScgYmVsb3cgYWxsb3dzIGZvciBzdHlsaW5nIGV2ZXJ5IGBsaWAgZWxlbWVudCBleGNlcHQgdGhlIGZpcnN0LlxuICovXG5jb25zdCBPcHRpb25zID0gc3R5bGVkLnVsYFxuICAkeyh7IHNjcmlwdCB9KSA9PiBzY3JpcHQgJiYgZ2V0TG9uZ1ByaW1lcihzY3JpcHQpfTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICR7Q19DT05TRU5UX0FDVElPTn07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuXG4gICYgbGkgKyBsaSB7XG4gICAgbWFyZ2luLXRvcDogJHtHRUxfU1BBQ0lOR307XG4gICAgcGFkZGluZy10b3A6ICR7R0VMX1NQQUNJTkdfREJMfTtcbiAgICBwYWRkaW5nLWJvdHRvbTogJHtHRUxfU1BBQ0lOR19EQkx9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuXG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cbiAgICAmIGxpICsgbGkge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG4gIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb25zZW50QmFubmVyVGV4dCA9IHN0eWxlZC5wYFxuICAkeyh7IHNjcmlwdCB9KSA9PiBzY3JpcHQgJiYgZ2V0Qm9keUNvcHkoc2NyaXB0KX07XG4gIG1hcmdpbi10b3A6ICR7R0VMX1NQQUNJTkdfREJMfTtcbiAgbWFyZ2luLWJvdHRvbTogJHtHRUxfU1BBQ0lOR19UUlBMfTtcbiAgY29sb3I6ICR7Q19DT05TRU5UX0NPTlRFTlR9O1xuXG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgbWFyZ2luLXRvcDogJHtHRUxfU1BBQ0lOR19UUlBMfTtcbiAgfVxuYDtcblxuLy8gU3R5bGUgYGJ1dHRvbmAgYW5kIGBhYCBhcyBjaGlsZHJlbiBkdWUgdG8gaW5hYmlsaXR5IHRvIHNldCBgb25gXG4vLyBwcm9wIG9uIHN0eWxlZCBjb21wb25lbnQgYXMgcmVxdWlyZWQgZm9yIHRoZSBhbXAgdXNlYWdlXG5jb25zdCBMaXN0SXRlbSA9IHN0eWxlZC5saWBcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgJiBidXR0b24ge1xuICAgICR7KHsgc2NyaXB0IH0pID0+IHNjcmlwdCAmJiBnZXRMb25nUHJpbWVyKHNjcmlwdCl9O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDIuNzVyZW07XG4gICAgY29sb3I6ICR7Q19FQk9OfTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke0NfR0hPU1R9O1xuICAgIGJvcmRlcjogc29saWQgJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0gdHJhbnNwYXJlbnQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICY6aG92ZXIsXG4gICAgJjpmb2N1cyB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG5cbiAgICAke2hvdmVyRm9jdXNTdHlsZXN9XG4gIH1cblxuICBAbWVkaWEgKG1pbi13aWR0aDogJHtHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUlOfSkge1xuICAgIHdpZHRoOiAxNy4zMTI1cmVtO1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29uc2VudEJhbm5lciA9ICh7XG4gIGRpcixcbiAgdGl0bGUsXG4gIHRleHQsXG4gIGFjY2VwdCxcbiAgcmVqZWN0LFxuICBpZCxcbiAgaGlkZGVuLFxuICBzY3JpcHQsXG4gIHNlcnZpY2UsXG4gIGhlYWRpbmdSZWYsXG59KSA9PiAoXG4gIDxXcmFwcGVyIGRpcj17ZGlyfSBoaWRkZW49e2hpZGRlbn0gaWQ9e2lkfSBzZXJ2aWNlPXtzZXJ2aWNlfT5cbiAgICA8Q2VudGVyV3JhcHBlciBkaXI9e2Rpcn0+XG4gICAgICA8VGl0bGUgZGlyPXtkaXJ9IHNjcmlwdD17c2NyaXB0fSByZWY9e2hlYWRpbmdSZWZ9PlxuICAgICAgICB7dGl0bGV9XG4gICAgICA8L1RpdGxlPlxuICAgICAge3RleHR9XG4gICAgICA8T3B0aW9ucyBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9IHJvbGU9XCJsaXN0XCI+XG4gICAgICAgIDxMaXN0SXRlbSBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9PlxuICAgICAgICAgIHthY2NlcHR9XG4gICAgICAgIDwvTGlzdEl0ZW0+XG4gICAgICAgIDxMaXN0SXRlbSBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9PlxuICAgICAgICAgIDxzcGFuPntyZWplY3R9PC9zcGFuPlxuICAgICAgICA8L0xpc3RJdGVtPlxuICAgICAgPC9PcHRpb25zPlxuICAgIDwvQ2VudGVyV3JhcHBlcj5cbiAgPC9XcmFwcGVyPlxuKTtcblxuQ29uc2VudEJhbm5lci5wcm9wVHlwZXMgPSB7XG4gIGRpcjogb25lT2YoWydsdHInLCAncnRsJ10pLFxuICB0aXRsZTogc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRleHQ6IGVsZW1lbnQuaXNSZXF1aXJlZCxcbiAgYWNjZXB0OiBlbGVtZW50LmlzUmVxdWlyZWQsXG4gIHJlamVjdDogZWxlbWVudC5pc1JlcXVpcmVkLFxuICBpZDogc3RyaW5nLFxuICBoaWRkZW46IGJvb2wsXG4gIHNjcmlwdDogc2hhcGUoc2NyaXB0UHJvcFR5cGUpLmlzUmVxdWlyZWQsXG4gIHNlcnZpY2U6IHN0cmluZy5pc1JlcXVpcmVkLFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvZm9yYmlkLXByb3AtdHlwZXNcbiAgaGVhZGluZ1JlZjogb25lT2ZUeXBlKFtmdW5jLCBzaGFwZSh7IGN1cnJlbnQ6IGFueSB9KV0pLFxufTtcblxuQ29uc2VudEJhbm5lci5kZWZhdWx0UHJvcHMgPSB7XG4gIGRpcjogJ2x0cicsXG4gIGlkOiBudWxsLFxuICBoaWRkZW46IG51bGwsXG4gIGhlYWRpbmdSZWY6IG51bGwsXG59O1xuIl19 */"));
var ConsentBannerText = (0, _base.default)("p", process.env.NODE_ENV === "production" ? {
  target: "e1o5up6o1"
} : {
  target: "e1o5up6o1",
  label: "ConsentBannerText"
})(function (_ref5) {
  var script = _ref5.script;
  return script && (0, _typography.getBodyCopy)(script);
}, ";margin-top:", _spacings.GEL_SPACING_DBL, ";margin-bottom:", _spacings.GEL_SPACING_TRPL, ";color:", _colours.C_CONSENT_CONTENT, ";@media (min-width: ", _breakpoints.GEL_GROUP_3_SCREEN_WIDTH_MIN, "){margin-top:", _spacings.GEL_SPACING_TRPL, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0p5QyIsImZpbGUiOiIuLi9zcmMvaW5kZXguanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBzdHJpbmcsXG4gIGVsZW1lbnQsXG4gIGJvb2wsXG4gIG9uZU9mLFxuICBzaGFwZSxcbiAgZnVuYyxcbiAgb25lT2ZUeXBlLFxuICBhbnksXG59IGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgc2NyaXB0UHJvcFR5cGUgfSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9wcm9wLXR5cGVzJztcbmltcG9ydCB7XG4gIENfQ09OU0VOVF9CQUNLR1JPVU5ELFxuICBDX0NPTlNFTlRfQUNUSU9OLFxuICBDX0NPTlNFTlRfQ09OVEVOVCxcbiAgQ19XSElURSxcbiAgQ19QRUJCTEUsXG4gIENfRUJPTixcbiAgQ19HSE9TVCxcbn0gZnJvbSAnQGJiYy9wc2FtbWVhZC1zdHlsZXMvY29sb3Vycyc7XG5pbXBvcnQge1xuICBnZXREb3VibGVQaWNhLFxuICBnZXRMb25nUHJpbWVyLFxuICBnZXRCb2R5Q29weSxcbn0gZnJvbSAnQGJiYy9nZWwtZm91bmRhdGlvbnMvdHlwb2dyYXBoeSc7XG5pbXBvcnQge1xuICBHRUxfR1JPVVBfMV9TQ1JFRU5fV0lEVEhfTUFYLFxuICBHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUlOLFxuICBHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUFYLFxuICBHRUxfR1JPVVBfM19TQ1JFRU5fV0lEVEhfTUlOLFxufSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9icmVha3BvaW50cyc7XG5pbXBvcnQge1xuICBHRUxfU1BBQ0lORyxcbiAgR0VMX1NQQUNJTkdfREJMLFxuICBHRUxfU1BBQ0lOR19UUlBMLFxuICBHRUxfU1BBQ0lOR19RVUFELFxufSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9zcGFjaW5ncyc7XG5pbXBvcnQgeyBnZXRTYW5zUmVndWxhciB9IGZyb20gJ0BiYmMvcHNhbW1lYWQtc3R5bGVzL2ZvbnQtc3R5bGVzJztcblxuLy8gVHJhbnNwYXJlbnQgYm9yZGVyIGlzIHRvIHNob3cgdGhlIHRvcCBvZiB0aGUgd3JhcHBlciBhbmQgYnV0dG9uIGJvcmRlciBpbiBoaWdoLWNvbnRyYXN0IG1vZGVcbmNvbnN0IHRyYW5zcGFyZW50Qm9yZGVySGVpZ2h0ID0gJzAuMDYyNXJlbSc7XG5cbmNvbnN0IGhvdmVyRm9jdXNTdHlsZXMgPSBgXG4gICY6Zm9jdXMsXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiAke0NfRUJPTn07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtDX0NPTlNFTlRfQUNUSU9OfTtcbiAgfVxuYDtcblxuY29uc3QgV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gICR7KHsgc2VydmljZSB9KSA9PiBnZXRTYW5zUmVndWxhcihzZXJ2aWNlKX1cbiAgYmFja2dyb3VuZC1jb2xvcjogJHtDX0NPTlNFTlRfQkFDS0dST1VORH07XG4gIGJvcmRlci10b3A6IHNvbGlkICR7dHJhbnNwYXJlbnRCb3JkZXJIZWlnaHR9IHRyYW5zcGFyZW50O1xuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke0dFTF9HUk9VUF8xX1NDUkVFTl9XSURUSF9NQVh9KSB7XG4gICAgcGFkZGluZzogY2FsYygke0dFTF9TUEFDSU5HX0RCTH0gLSAke3RyYW5zcGFyZW50Qm9yZGVySGVpZ2h0fSlcbiAgICAgICR7R0VMX1NQQUNJTkd9ICR7R0VMX1NQQUNJTkd9ICR7R0VMX1NQQUNJTkd9O1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8yX1NDUkVFTl9XSURUSF9NSU59KSBhbmQgKG1heC13aWR0aDogJHtHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUFYfSkge1xuICAgIHBhZGRpbmc6IGNhbGMoJHtHRUxfU1BBQ0lOR19EQkx9IC0gJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0pXG4gICAgICAke0dFTF9TUEFDSU5HX0RCTH0gJHtHRUxfU1BBQ0lOR30gJHtHRUxfU1BBQ0lOR19EQkx9O1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgcGFkZGluZzogY2FsYygke0dFTF9TUEFDSU5HX1FVQUR9IC0gJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0pXG4gICAgICAke0dFTF9TUEFDSU5HX0RCTH0gJHtHRUxfU1BBQ0lOR19RVUFEfSAke0dFTF9TUEFDSU5HX0RCTH07XG4gIH1cbmA7XG5cbmNvbnN0IENlbnRlcldyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXgtd2lkdGg6ICR7R0VMX0dST1VQXzJfU0NSRUVOX1dJRFRIX01BWH07XG4gIG1hcmdpbjogMCBhdXRvO1xuXG4gIGEge1xuICAgIGNvbG9yOiAke0NfQ09OU0VOVF9BQ1RJT059O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAwLjA2MjVyZW0gJHtDX1BFQkJMRX07XG5cbiAgICAke2hvdmVyRm9jdXNTdHlsZXN9XG4gIH1cblxuICBhOmhvdmVyLFxuICBhOmZvY3VzIHtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAwLjEyNXJlbSB0cmFuc3BhcmVudDtcbiAgfVxuYDtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3Byb3AtdHlwZXNcbmNvbnN0IEZvY3VzYWJsZUgyID0gZm9yd2FyZFJlZigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCBkaXIgfSwgcmVmKSA9PiB7XG4gIC8vIHRhYkluZGV4PVwiLTFcIiBlbmFibGVzIHRoZSBoMiB0byBiZSBmb2N1c3NlZFxuICByZXR1cm4gKFxuICAgIDxoMiBjbGFzc05hbWU9e2NsYXNzTmFtZX0gZGlyPXtkaXJ9IHRhYkluZGV4PVwiLTFcIiByZWY9e3JlZn0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9oMj5cbiAgKTtcbn0pO1xuXG5jb25zdCBUaXRsZSA9IHN0eWxlZChGb2N1c2FibGVIMilgXG4gICR7KHsgc2NyaXB0IH0pID0+IHNjcmlwdCAmJiBnZXREb3VibGVQaWNhKHNjcmlwdCl9O1xuICBjb2xvcjogJHtDX1dISVRFfTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cbmA7XG5cbi8qXG4gKiBUaGUgJyYgbGkgKyBsaScgYmVsb3cgYWxsb3dzIGZvciBzdHlsaW5nIGV2ZXJ5IGBsaWAgZWxlbWVudCBleGNlcHQgdGhlIGZpcnN0LlxuICovXG5jb25zdCBPcHRpb25zID0gc3R5bGVkLnVsYFxuICAkeyh7IHNjcmlwdCB9KSA9PiBzY3JpcHQgJiYgZ2V0TG9uZ1ByaW1lcihzY3JpcHQpfTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICR7Q19DT05TRU5UX0FDVElPTn07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuXG4gICYgbGkgKyBsaSB7XG4gICAgbWFyZ2luLXRvcDogJHtHRUxfU1BBQ0lOR307XG4gICAgcGFkZGluZy10b3A6ICR7R0VMX1NQQUNJTkdfREJMfTtcbiAgICBwYWRkaW5nLWJvdHRvbTogJHtHRUxfU1BBQ0lOR19EQkx9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuXG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cbiAgICAmIGxpICsgbGkge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG4gIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb25zZW50QmFubmVyVGV4dCA9IHN0eWxlZC5wYFxuICAkeyh7IHNjcmlwdCB9KSA9PiBzY3JpcHQgJiYgZ2V0Qm9keUNvcHkoc2NyaXB0KX07XG4gIG1hcmdpbi10b3A6ICR7R0VMX1NQQUNJTkdfREJMfTtcbiAgbWFyZ2luLWJvdHRvbTogJHtHRUxfU1BBQ0lOR19UUlBMfTtcbiAgY29sb3I6ICR7Q19DT05TRU5UX0NPTlRFTlR9O1xuXG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgbWFyZ2luLXRvcDogJHtHRUxfU1BBQ0lOR19UUlBMfTtcbiAgfVxuYDtcblxuLy8gU3R5bGUgYGJ1dHRvbmAgYW5kIGBhYCBhcyBjaGlsZHJlbiBkdWUgdG8gaW5hYmlsaXR5IHRvIHNldCBgb25gXG4vLyBwcm9wIG9uIHN0eWxlZCBjb21wb25lbnQgYXMgcmVxdWlyZWQgZm9yIHRoZSBhbXAgdXNlYWdlXG5jb25zdCBMaXN0SXRlbSA9IHN0eWxlZC5saWBcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgJiBidXR0b24ge1xuICAgICR7KHsgc2NyaXB0IH0pID0+IHNjcmlwdCAmJiBnZXRMb25nUHJpbWVyKHNjcmlwdCl9O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDIuNzVyZW07XG4gICAgY29sb3I6ICR7Q19FQk9OfTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke0NfR0hPU1R9O1xuICAgIGJvcmRlcjogc29saWQgJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0gdHJhbnNwYXJlbnQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICY6aG92ZXIsXG4gICAgJjpmb2N1cyB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG5cbiAgICAke2hvdmVyRm9jdXNTdHlsZXN9XG4gIH1cblxuICBAbWVkaWEgKG1pbi13aWR0aDogJHtHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUlOfSkge1xuICAgIHdpZHRoOiAxNy4zMTI1cmVtO1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29uc2VudEJhbm5lciA9ICh7XG4gIGRpcixcbiAgdGl0bGUsXG4gIHRleHQsXG4gIGFjY2VwdCxcbiAgcmVqZWN0LFxuICBpZCxcbiAgaGlkZGVuLFxuICBzY3JpcHQsXG4gIHNlcnZpY2UsXG4gIGhlYWRpbmdSZWYsXG59KSA9PiAoXG4gIDxXcmFwcGVyIGRpcj17ZGlyfSBoaWRkZW49e2hpZGRlbn0gaWQ9e2lkfSBzZXJ2aWNlPXtzZXJ2aWNlfT5cbiAgICA8Q2VudGVyV3JhcHBlciBkaXI9e2Rpcn0+XG4gICAgICA8VGl0bGUgZGlyPXtkaXJ9IHNjcmlwdD17c2NyaXB0fSByZWY9e2hlYWRpbmdSZWZ9PlxuICAgICAgICB7dGl0bGV9XG4gICAgICA8L1RpdGxlPlxuICAgICAge3RleHR9XG4gICAgICA8T3B0aW9ucyBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9IHJvbGU9XCJsaXN0XCI+XG4gICAgICAgIDxMaXN0SXRlbSBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9PlxuICAgICAgICAgIHthY2NlcHR9XG4gICAgICAgIDwvTGlzdEl0ZW0+XG4gICAgICAgIDxMaXN0SXRlbSBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9PlxuICAgICAgICAgIDxzcGFuPntyZWplY3R9PC9zcGFuPlxuICAgICAgICA8L0xpc3RJdGVtPlxuICAgICAgPC9PcHRpb25zPlxuICAgIDwvQ2VudGVyV3JhcHBlcj5cbiAgPC9XcmFwcGVyPlxuKTtcblxuQ29uc2VudEJhbm5lci5wcm9wVHlwZXMgPSB7XG4gIGRpcjogb25lT2YoWydsdHInLCAncnRsJ10pLFxuICB0aXRsZTogc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRleHQ6IGVsZW1lbnQuaXNSZXF1aXJlZCxcbiAgYWNjZXB0OiBlbGVtZW50LmlzUmVxdWlyZWQsXG4gIHJlamVjdDogZWxlbWVudC5pc1JlcXVpcmVkLFxuICBpZDogc3RyaW5nLFxuICBoaWRkZW46IGJvb2wsXG4gIHNjcmlwdDogc2hhcGUoc2NyaXB0UHJvcFR5cGUpLmlzUmVxdWlyZWQsXG4gIHNlcnZpY2U6IHN0cmluZy5pc1JlcXVpcmVkLFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvZm9yYmlkLXByb3AtdHlwZXNcbiAgaGVhZGluZ1JlZjogb25lT2ZUeXBlKFtmdW5jLCBzaGFwZSh7IGN1cnJlbnQ6IGFueSB9KV0pLFxufTtcblxuQ29uc2VudEJhbm5lci5kZWZhdWx0UHJvcHMgPSB7XG4gIGRpcjogJ2x0cicsXG4gIGlkOiBudWxsLFxuICBoaWRkZW46IG51bGwsXG4gIGhlYWRpbmdSZWY6IG51bGwsXG59O1xuIl19 */")); // Style `button` and `a` as children due to inability to set `on`
// prop on styled component as required for the amp useage

exports.ConsentBannerText = ConsentBannerText;
var ListItem = (0, _base.default)("li", process.env.NODE_ENV === "production" ? {
  target: "e1o5up6o0"
} : {
  target: "e1o5up6o0",
  label: "ListItem"
})("text-align:center;width:100%;word-break:break-word;& button{", function (_ref6) {
  var script = _ref6.script;
  return script && (0, _typography.getLongPrimer)(script);
}, ";width:100%;min-height:2.75rem;color:", _colours.C_EBON, ";font-weight:bold;background-color:", _colours.C_GHOST, ";border:solid ", transparentBorderHeight, " transparent;margin:0;cursor:pointer;", hoverFocusStyles, ";&:hover,&:focus{text-decoration:underline;}}@media (min-width: ", _breakpoints.GEL_GROUP_2_SCREEN_WIDTH_MIN, "){width:17.3125rem;}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkowQiIsImZpbGUiOiIuLi9zcmMvaW5kZXguanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBzdHJpbmcsXG4gIGVsZW1lbnQsXG4gIGJvb2wsXG4gIG9uZU9mLFxuICBzaGFwZSxcbiAgZnVuYyxcbiAgb25lT2ZUeXBlLFxuICBhbnksXG59IGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgc2NyaXB0UHJvcFR5cGUgfSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9wcm9wLXR5cGVzJztcbmltcG9ydCB7XG4gIENfQ09OU0VOVF9CQUNLR1JPVU5ELFxuICBDX0NPTlNFTlRfQUNUSU9OLFxuICBDX0NPTlNFTlRfQ09OVEVOVCxcbiAgQ19XSElURSxcbiAgQ19QRUJCTEUsXG4gIENfRUJPTixcbiAgQ19HSE9TVCxcbn0gZnJvbSAnQGJiYy9wc2FtbWVhZC1zdHlsZXMvY29sb3Vycyc7XG5pbXBvcnQge1xuICBnZXREb3VibGVQaWNhLFxuICBnZXRMb25nUHJpbWVyLFxuICBnZXRCb2R5Q29weSxcbn0gZnJvbSAnQGJiYy9nZWwtZm91bmRhdGlvbnMvdHlwb2dyYXBoeSc7XG5pbXBvcnQge1xuICBHRUxfR1JPVVBfMV9TQ1JFRU5fV0lEVEhfTUFYLFxuICBHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUlOLFxuICBHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUFYLFxuICBHRUxfR1JPVVBfM19TQ1JFRU5fV0lEVEhfTUlOLFxufSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9icmVha3BvaW50cyc7XG5pbXBvcnQge1xuICBHRUxfU1BBQ0lORyxcbiAgR0VMX1NQQUNJTkdfREJMLFxuICBHRUxfU1BBQ0lOR19UUlBMLFxuICBHRUxfU1BBQ0lOR19RVUFELFxufSBmcm9tICdAYmJjL2dlbC1mb3VuZGF0aW9ucy9zcGFjaW5ncyc7XG5pbXBvcnQgeyBnZXRTYW5zUmVndWxhciB9IGZyb20gJ0BiYmMvcHNhbW1lYWQtc3R5bGVzL2ZvbnQtc3R5bGVzJztcblxuLy8gVHJhbnNwYXJlbnQgYm9yZGVyIGlzIHRvIHNob3cgdGhlIHRvcCBvZiB0aGUgd3JhcHBlciBhbmQgYnV0dG9uIGJvcmRlciBpbiBoaWdoLWNvbnRyYXN0IG1vZGVcbmNvbnN0IHRyYW5zcGFyZW50Qm9yZGVySGVpZ2h0ID0gJzAuMDYyNXJlbSc7XG5cbmNvbnN0IGhvdmVyRm9jdXNTdHlsZXMgPSBgXG4gICY6Zm9jdXMsXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiAke0NfRUJPTn07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtDX0NPTlNFTlRfQUNUSU9OfTtcbiAgfVxuYDtcblxuY29uc3QgV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gICR7KHsgc2VydmljZSB9KSA9PiBnZXRTYW5zUmVndWxhcihzZXJ2aWNlKX1cbiAgYmFja2dyb3VuZC1jb2xvcjogJHtDX0NPTlNFTlRfQkFDS0dST1VORH07XG4gIGJvcmRlci10b3A6IHNvbGlkICR7dHJhbnNwYXJlbnRCb3JkZXJIZWlnaHR9IHRyYW5zcGFyZW50O1xuXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke0dFTF9HUk9VUF8xX1NDUkVFTl9XSURUSF9NQVh9KSB7XG4gICAgcGFkZGluZzogY2FsYygke0dFTF9TUEFDSU5HX0RCTH0gLSAke3RyYW5zcGFyZW50Qm9yZGVySGVpZ2h0fSlcbiAgICAgICR7R0VMX1NQQUNJTkd9ICR7R0VMX1NQQUNJTkd9ICR7R0VMX1NQQUNJTkd9O1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8yX1NDUkVFTl9XSURUSF9NSU59KSBhbmQgKG1heC13aWR0aDogJHtHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUFYfSkge1xuICAgIHBhZGRpbmc6IGNhbGMoJHtHRUxfU1BBQ0lOR19EQkx9IC0gJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0pXG4gICAgICAke0dFTF9TUEFDSU5HX0RCTH0gJHtHRUxfU1BBQ0lOR30gJHtHRUxfU1BBQ0lOR19EQkx9O1xuICB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgcGFkZGluZzogY2FsYygke0dFTF9TUEFDSU5HX1FVQUR9IC0gJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0pXG4gICAgICAke0dFTF9TUEFDSU5HX0RCTH0gJHtHRUxfU1BBQ0lOR19RVUFEfSAke0dFTF9TUEFDSU5HX0RCTH07XG4gIH1cbmA7XG5cbmNvbnN0IENlbnRlcldyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXgtd2lkdGg6ICR7R0VMX0dST1VQXzJfU0NSRUVOX1dJRFRIX01BWH07XG4gIG1hcmdpbjogMCBhdXRvO1xuXG4gIGEge1xuICAgIGNvbG9yOiAke0NfQ09OU0VOVF9BQ1RJT059O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAwLjA2MjVyZW0gJHtDX1BFQkJMRX07XG5cbiAgICAke2hvdmVyRm9jdXNTdHlsZXN9XG4gIH1cblxuICBhOmhvdmVyLFxuICBhOmZvY3VzIHtcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAwLjEyNXJlbSB0cmFuc3BhcmVudDtcbiAgfVxuYDtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3Byb3AtdHlwZXNcbmNvbnN0IEZvY3VzYWJsZUgyID0gZm9yd2FyZFJlZigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCBkaXIgfSwgcmVmKSA9PiB7XG4gIC8vIHRhYkluZGV4PVwiLTFcIiBlbmFibGVzIHRoZSBoMiB0byBiZSBmb2N1c3NlZFxuICByZXR1cm4gKFxuICAgIDxoMiBjbGFzc05hbWU9e2NsYXNzTmFtZX0gZGlyPXtkaXJ9IHRhYkluZGV4PVwiLTFcIiByZWY9e3JlZn0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9oMj5cbiAgKTtcbn0pO1xuXG5jb25zdCBUaXRsZSA9IHN0eWxlZChGb2N1c2FibGVIMilgXG4gICR7KHsgc2NyaXB0IH0pID0+IHNjcmlwdCAmJiBnZXREb3VibGVQaWNhKHNjcmlwdCl9O1xuICBjb2xvcjogJHtDX1dISVRFfTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cbmA7XG5cbi8qXG4gKiBUaGUgJyYgbGkgKyBsaScgYmVsb3cgYWxsb3dzIGZvciBzdHlsaW5nIGV2ZXJ5IGBsaWAgZWxlbWVudCBleGNlcHQgdGhlIGZpcnN0LlxuICovXG5jb25zdCBPcHRpb25zID0gc3R5bGVkLnVsYFxuICAkeyh7IHNjcmlwdCB9KSA9PiBzY3JpcHQgJiYgZ2V0TG9uZ1ByaW1lcihzY3JpcHQpfTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICR7Q19DT05TRU5UX0FDVElPTn07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuXG4gICYgbGkgKyBsaSB7XG4gICAgbWFyZ2luLXRvcDogJHtHRUxfU1BBQ0lOR307XG4gICAgcGFkZGluZy10b3A6ICR7R0VMX1NQQUNJTkdfREJMfTtcbiAgICBwYWRkaW5nLWJvdHRvbTogJHtHRUxfU1BBQ0lOR19EQkx9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuXG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cbiAgICAmIGxpICsgbGkge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG4gIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb25zZW50QmFubmVyVGV4dCA9IHN0eWxlZC5wYFxuICAkeyh7IHNjcmlwdCB9KSA9PiBzY3JpcHQgJiYgZ2V0Qm9keUNvcHkoc2NyaXB0KX07XG4gIG1hcmdpbi10b3A6ICR7R0VMX1NQQUNJTkdfREJMfTtcbiAgbWFyZ2luLWJvdHRvbTogJHtHRUxfU1BBQ0lOR19UUlBMfTtcbiAgY29sb3I6ICR7Q19DT05TRU5UX0NPTlRFTlR9O1xuXG4gIEBtZWRpYSAobWluLXdpZHRoOiAke0dFTF9HUk9VUF8zX1NDUkVFTl9XSURUSF9NSU59KSB7XG4gICAgbWFyZ2luLXRvcDogJHtHRUxfU1BBQ0lOR19UUlBMfTtcbiAgfVxuYDtcblxuLy8gU3R5bGUgYGJ1dHRvbmAgYW5kIGBhYCBhcyBjaGlsZHJlbiBkdWUgdG8gaW5hYmlsaXR5IHRvIHNldCBgb25gXG4vLyBwcm9wIG9uIHN0eWxlZCBjb21wb25lbnQgYXMgcmVxdWlyZWQgZm9yIHRoZSBhbXAgdXNlYWdlXG5jb25zdCBMaXN0SXRlbSA9IHN0eWxlZC5saWBcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgJiBidXR0b24ge1xuICAgICR7KHsgc2NyaXB0IH0pID0+IHNjcmlwdCAmJiBnZXRMb25nUHJpbWVyKHNjcmlwdCl9O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDIuNzVyZW07XG4gICAgY29sb3I6ICR7Q19FQk9OfTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke0NfR0hPU1R9O1xuICAgIGJvcmRlcjogc29saWQgJHt0cmFuc3BhcmVudEJvcmRlckhlaWdodH0gdHJhbnNwYXJlbnQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICY6aG92ZXIsXG4gICAgJjpmb2N1cyB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG5cbiAgICAke2hvdmVyRm9jdXNTdHlsZXN9XG4gIH1cblxuICBAbWVkaWEgKG1pbi13aWR0aDogJHtHRUxfR1JPVVBfMl9TQ1JFRU5fV0lEVEhfTUlOfSkge1xuICAgIHdpZHRoOiAxNy4zMTI1cmVtO1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29uc2VudEJhbm5lciA9ICh7XG4gIGRpcixcbiAgdGl0bGUsXG4gIHRleHQsXG4gIGFjY2VwdCxcbiAgcmVqZWN0LFxuICBpZCxcbiAgaGlkZGVuLFxuICBzY3JpcHQsXG4gIHNlcnZpY2UsXG4gIGhlYWRpbmdSZWYsXG59KSA9PiAoXG4gIDxXcmFwcGVyIGRpcj17ZGlyfSBoaWRkZW49e2hpZGRlbn0gaWQ9e2lkfSBzZXJ2aWNlPXtzZXJ2aWNlfT5cbiAgICA8Q2VudGVyV3JhcHBlciBkaXI9e2Rpcn0+XG4gICAgICA8VGl0bGUgZGlyPXtkaXJ9IHNjcmlwdD17c2NyaXB0fSByZWY9e2hlYWRpbmdSZWZ9PlxuICAgICAgICB7dGl0bGV9XG4gICAgICA8L1RpdGxlPlxuICAgICAge3RleHR9XG4gICAgICA8T3B0aW9ucyBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9IHJvbGU9XCJsaXN0XCI+XG4gICAgICAgIDxMaXN0SXRlbSBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9PlxuICAgICAgICAgIHthY2NlcHR9XG4gICAgICAgIDwvTGlzdEl0ZW0+XG4gICAgICAgIDxMaXN0SXRlbSBkaXI9e2Rpcn0gc2NyaXB0PXtzY3JpcHR9PlxuICAgICAgICAgIDxzcGFuPntyZWplY3R9PC9zcGFuPlxuICAgICAgICA8L0xpc3RJdGVtPlxuICAgICAgPC9PcHRpb25zPlxuICAgIDwvQ2VudGVyV3JhcHBlcj5cbiAgPC9XcmFwcGVyPlxuKTtcblxuQ29uc2VudEJhbm5lci5wcm9wVHlwZXMgPSB7XG4gIGRpcjogb25lT2YoWydsdHInLCAncnRsJ10pLFxuICB0aXRsZTogc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRleHQ6IGVsZW1lbnQuaXNSZXF1aXJlZCxcbiAgYWNjZXB0OiBlbGVtZW50LmlzUmVxdWlyZWQsXG4gIHJlamVjdDogZWxlbWVudC5pc1JlcXVpcmVkLFxuICBpZDogc3RyaW5nLFxuICBoaWRkZW46IGJvb2wsXG4gIHNjcmlwdDogc2hhcGUoc2NyaXB0UHJvcFR5cGUpLmlzUmVxdWlyZWQsXG4gIHNlcnZpY2U6IHN0cmluZy5pc1JlcXVpcmVkLFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvZm9yYmlkLXByb3AtdHlwZXNcbiAgaGVhZGluZ1JlZjogb25lT2ZUeXBlKFtmdW5jLCBzaGFwZSh7IGN1cnJlbnQ6IGFueSB9KV0pLFxufTtcblxuQ29uc2VudEJhbm5lci5kZWZhdWx0UHJvcHMgPSB7XG4gIGRpcjogJ2x0cicsXG4gIGlkOiBudWxsLFxuICBoaWRkZW46IG51bGwsXG4gIGhlYWRpbmdSZWY6IG51bGwsXG59O1xuIl19 */"));

var ConsentBanner = function ConsentBanner(_ref7) {
  var dir = _ref7.dir,
      title = _ref7.title,
      text = _ref7.text,
      accept = _ref7.accept,
      reject = _ref7.reject,
      id = _ref7.id,
      hidden = _ref7.hidden,
      script = _ref7.script,
      service = _ref7.service,
      headingRef = _ref7.headingRef;
  return /*#__PURE__*/_react.default.createElement(Wrapper, {
    dir: dir,
    hidden: hidden,
    id: id,
    service: service
  }, /*#__PURE__*/_react.default.createElement(CenterWrapper, {
    dir: dir
  }, /*#__PURE__*/_react.default.createElement(Title, {
    dir: dir,
    script: script,
    ref: headingRef
  }, title), text, /*#__PURE__*/_react.default.createElement(Options, {
    dir: dir,
    script: script,
    role: "list"
  }, /*#__PURE__*/_react.default.createElement(ListItem, {
    dir: dir,
    script: script
  }, accept), /*#__PURE__*/_react.default.createElement(ListItem, {
    dir: dir,
    script: script
  }, /*#__PURE__*/_react.default.createElement("span", null, reject)))));
};

exports.ConsentBanner = ConsentBanner;
ConsentBanner.propTypes = {
  dir: (0, _propTypes.oneOf)(['ltr', 'rtl']),
  title: _propTypes.string.isRequired,
  text: _propTypes.element.isRequired,
  accept: _propTypes.element.isRequired,
  reject: _propTypes.element.isRequired,
  id: _propTypes.string,
  hidden: _propTypes.bool,
  script: (0, _propTypes.shape)(_propTypes2.scriptPropType).isRequired,
  service: _propTypes.string.isRequired,
  // eslint-disable-next-line react/forbid-prop-types
  headingRef: (0, _propTypes.oneOfType)([_propTypes.func, (0, _propTypes.shape)({
    current: _propTypes.any
  })])
};
ConsentBanner.defaultProps = {
  dir: 'ltr',
  id: null,
  hidden: null,
  headingRef: null
};